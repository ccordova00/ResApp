// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using ResApp.Data;
using System;

namespace ResApp.Migrations
{
    [DbContext(typeof(ResAppContext))]
    [Migration("20181124201631_job1")]
    partial class job1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.3-rtm-10026")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ResApp.Models.Applicant", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Address");

                    b.Property<string>("Email");

                    b.Property<string>("FirstName");

                    b.Property<string>("LastName");

                    b.Property<string>("PhoneNumber");

                    b.HasKey("ID");

                    b.ToTable("Applicant");
                });

            modelBuilder.Entity("ResApp.Models.Category", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Description");

                    b.HasKey("ID");

                    b.ToTable("Category");
                });

            modelBuilder.Entity("ResApp.Models.Cert", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("ApplicantID");

                    b.Property<DateTime>("DateAcquired");

                    b.Property<DateTime?>("DateExpired");

                    b.Property<string>("Description");

                    b.Property<string>("Link");

                    b.HasKey("ID");

                    b.HasIndex("ApplicantID");

                    b.ToTable("Cert");
                });

            modelBuilder.Entity("ResApp.Models.Education", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("ApplicantID");

                    b.Property<string>("Degree");

                    b.Property<string>("GPA");

                    b.Property<DateTime>("GradDate");

                    b.Property<string>("School");

                    b.HasKey("ID");

                    b.HasIndex("ApplicantID");

                    b.ToTable("Education");
                });

            modelBuilder.Entity("ResApp.Models.Job", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("ApplicantID");

                    b.Property<string>("Company");

                    b.Property<DateTime?>("EndDate");

                    b.Property<string>("Info");

                    b.Property<DateTime>("StartDate");

                    b.Property<string>("Title");

                    b.HasKey("ID");

                    b.HasIndex("ApplicantID");

                    b.ToTable("Job");
                });

            modelBuilder.Entity("ResApp.Models.Link", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("ApplicantID");

                    b.Property<string>("Description");

                    b.Property<string>("LinkUrl");

                    b.HasKey("ID");

                    b.HasIndex("ApplicantID");

                    b.ToTable("Links");
                });

            modelBuilder.Entity("ResApp.Models.Reference", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("ApplicantID");

                    b.Property<string>("Company");

                    b.Property<string>("Name");

                    b.Property<string>("PhoneNumber");

                    b.Property<string>("Title");

                    b.HasKey("ID");

                    b.HasIndex("ApplicantID");

                    b.ToTable("Reference");
                });

            modelBuilder.Entity("ResApp.Models.Responsibility", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Description");

                    b.Property<int>("JobID");

                    b.HasKey("ID");

                    b.HasIndex("JobID");

                    b.ToTable("Responsibility");
                });

            modelBuilder.Entity("ResApp.Models.Skill", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("ApplicantID");

                    b.Property<int>("CategoryID");

                    b.Property<string>("Description");

                    b.Property<int?>("Priority");

                    b.Property<int>("YearsExp");

                    b.HasKey("ID");

                    b.HasIndex("ApplicantID");

                    b.HasIndex("CategoryID");

                    b.ToTable("Skill");
                });

            modelBuilder.Entity("ResApp.Models.Cert", b =>
                {
                    b.HasOne("ResApp.Models.Applicant", "Applicant")
                        .WithMany("Certs")
                        .HasForeignKey("ApplicantID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ResApp.Models.Education", b =>
                {
                    b.HasOne("ResApp.Models.Applicant", "Applicant")
                        .WithMany("Educations")
                        .HasForeignKey("ApplicantID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ResApp.Models.Job", b =>
                {
                    b.HasOne("ResApp.Models.Applicant", "Applicant")
                        .WithMany("Jobs")
                        .HasForeignKey("ApplicantID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ResApp.Models.Link", b =>
                {
                    b.HasOne("ResApp.Models.Applicant", "Applicant")
                        .WithMany("Links")
                        .HasForeignKey("ApplicantID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ResApp.Models.Reference", b =>
                {
                    b.HasOne("ResApp.Models.Applicant", "Applicant")
                        .WithMany("References")
                        .HasForeignKey("ApplicantID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ResApp.Models.Responsibility", b =>
                {
                    b.HasOne("ResApp.Models.Job", "Job")
                        .WithMany("Responsibilities")
                        .HasForeignKey("JobID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ResApp.Models.Skill", b =>
                {
                    b.HasOne("ResApp.Models.Applicant", "Applicant")
                        .WithMany("Skills")
                        .HasForeignKey("ApplicantID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ResApp.Models.Category", "Category")
                        .WithMany("Skills")
                        .HasForeignKey("CategoryID")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
