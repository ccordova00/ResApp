@model ResApp.Models.Applicant

@{
    ViewData["Title"] = "Corban Cordova's Resume";
}

<div class="">
    <div class="text-left text-md-center mb-4 text-light"><h2>Corban Cordova</h2></div>
    <div class="card mb-4">
        <div class="card-title">
            <h4>Resume</h4>
        </div>
        <div class="card-body">
            <div>
                @Html.DisplayFor(x => x.LastName), @Html.DisplayFor(x => x.FirstName)
            </div>
            <div>
                @Html.DisplayFor(x => x.PhoneNumber)
            </div>
            <div>
                @Html.DisplayFor(x => x.Address)
            </div>
            <div>
                @Html.DisplayFor(x => x.Email)
            </div><br />
        </div> <!-- card body -->
    </div> <!--card -->

    <div class="card">
        <div class="card-title"><u>Certifications</u></div>
        <div class="card-body">
            @foreach (var item in Model.Certs)
            {
                <div>
                    @Html.DisplayFor(modelItem => item.Description) @if (!string.IsNullOrEmpty(item.Link))
                    {
                        <a href="@Html.DisplayFor(modelItem => item.Link)">verify</a>
                    }

                </div>
            }<br />
        </div> <!-- card body -->
    </div> <!--card -->
    <div><u>Skills</u></div>

    @foreach (var section in (List<Category>)ViewBag.Categories)
    {
        <div class="card">

            <div class="card-header">
                <h4><u>@Html.DisplayFor(modelItem => section.Description)</u></h4>
            </div>
            <div class="card-body">
                @foreach (var item in Model.Skills)
                {
                    @if (section.Description == item.Category.Description)
                    {
                        <div>
                            @Html.DisplayFor(modelItem => item.Description)
                        </div>
                    }
                }
            </div><!-- card body -->
        </div><!-- card -->
    }
    <br />

    <div><u>Online Resources</u></div>
    @foreach (var item in Model.Links)
    {
        <div>
            <a href="@item.LinkUrl">@Html.DisplayFor(modelItem => item.Description)</a>
        </div>
    }<br />

    <div><u>Experience</u></div>
    <table>
        @foreach (var item in Model.Jobs)
        {
            <tr>
                <td>
                    <h4><u>@Html.DisplayFor(modelItem => item.Company)</u></h4>
                    ( @Html.DisplayFor(modelItem => item.StartDate) - @(string.IsNullOrEmpty(item.EndDate.ToString()) ? "Present" : "")
                    @Html.DisplayFor(modelItem => item.EndDate))
                </td>
            </tr>
            <tr>
                <td>
                    @item.Title<br />
                </td>
            </tr>
            <tr>
                <td>
                    @item.Info<br />
                </td>
            </tr>
            @foreach (var responsibility in item.Responsibilities)
            {
                <tr>
                    <td>
                        <ul>
                            <li>
                                @responsibility.Description
                            </li>
                        </ul>
                    </td>
                </tr>
            }
        }
    </table>
    <div><u>Education</u></div>


    @foreach (var item in Model.Educations)
    {
        <table>
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Degree)
                </td>
            </tr>
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.School)
                </td>
            </tr>
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.GradDate)
                </td>
            </tr>
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.GPA), GPA
                </td>
            </tr>
            <br />
        </table>

    }

    <div><u>References</u></div>

    @foreach (var item in Model.References)
    {
        <table>
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Name), @Html.DisplayFor(modelItem => item.Title)
                </td>
            </tr>
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Company)
                </td>
            </tr>
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.PhoneNumber)
                </td>
            </tr>
        </table>
        <br />
    }
</div> <!--container -->